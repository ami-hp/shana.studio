
$breakpoints: (
    'fold':  ( max-width: 280px ),
    'xxs' :  ( max-width: 320px ),
    'xs'  :  ( max-width: 575px ),
    'sm'  :  ( min-width: 576px ),
    'md'  :  ( min-width: 768px ),
    'lg'  :  ( min-width: 992px ),
    'li'  :  ( min-width: 1024px ),
    'xl'  :  ( min-width: 1200px ),
    'xxl' :  ( min-width: 1400px ),
) !default;

/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media #{inspect(map-get($breakpoints, $breakpoint))} {
            @content;
        }
    }

        // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}


@mixin each-respond ($sizePh , $numPh , $count-max , $count-min){
    @each $b in map-keys($breakpoints) {
        @include respond-to($b){
            @for $i from $count-min through $count-max {
                $sizePh : $b;
                $numPh : $i;
                @content
            }
        }
    }
}
